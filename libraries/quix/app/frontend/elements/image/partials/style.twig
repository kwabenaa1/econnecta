{% include 'global.twig' %}

var id = "#{{ field("id") }}",
    img = id + " img," + id + " svg",
    src = {{ field("image") | json_encode() }},
    iconSelector = id + " svg," + id + " i",
    medSelector = id + " img," + id + " svg," + id + " i",
    caption =  id + " .qx-figure-caption";

{# Image #}
style.width( img, {{ field('width') | json_encode() }}); 
style.css( medSelector, 'opacity', {{ field('opacity').value | json_encode() }} ); 
style.alignment(id, {{ field('alignment') | json_encode() }});
style.css( img, 'display', 'inline-block');

{# Backword Compitable issue fixed #}
style.height( img, {{ field('height') | json_encode() }});
style.borderWidth( img, {{ field('img_border_width') | json_encode() }} );
style.css( img, 'border-style', {{ field('img_border_type') | json_encode() }} );
style.css( img, 'border-color', {{ field('img_border_color') | json_encode() }} ); 
style.borderRadius( img, {{ field('img_border_radius') | json_encode() }} );
style.css(caption, 'background-color', {{ field('caption_field_group_background_color') | json_encode() }});

{# Border #}
style.border(img, {{ field('img_border') | json_encode() }});

// svg
if( src.media ) {
  if( src.media.type == "svg" ) {
	var size = {{ prepareSvgSizeValue(field("image").media.properties.size)|json_encode() }};  

    style.css( id + " path", "fill", src.media.properties.color )
    style.css( id + " svg", 'width', size.value +  size.unit)
    style.css( id + " svg", 'height', size.value +  size.unit)

    style.css( id + " i", 'color', src.media.properties.color)
    style.css( id + " i", 'font-size', size.value +  size.unit)
  }
}

{# Icon #}
style.css( iconSelector, 'color', {{ field('icon_color') | json_encode() }});
style.css( iconSelector + ':hover', 'color', {{ field('icon_hover_color') | json_encode() }});
style.background( iconSelector, {{ field('icon_background') | json_encode() }});
style.padding( iconSelector, {{ field('icon_padding') | json_encode() }});

{# Caption #}
style.margin(caption, {{ field("caption_field_group_margin") | json_encode() }});
style.padding(caption, {{ field("caption_field_group_padding") | json_encode() }});
style.alignment(caption, {{ field('caption_field_group_alignment') | json_encode() }});
style.typography(caption, {{ field('caption_field_group_font') | json_encode() }});
style.css(caption, 'color', {{ field('caption_field_group_text_color') | json_encode() }});
style.background(caption, {{ field('caption_background_color') | json_encode() }});
style.border(caption, {{ field('caption_border') | json_encode() }});

{% if renderer %}
    style.load(id);
{% endif %}